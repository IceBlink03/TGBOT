import telebot import easyocr
from telebot import types from Code4ALL_bot import*
from PlayRandomNumbers import* from varList import token

def telegram_bot(token):
bot = telebot.TeleBot(token)

@bot.message_handler(commands=["start"]) def start_message(message):
startMsgSend(bot, message)

@bot.message_handler(commands=["menu"]) def menu_talk(message):
MenuTalk(bot, message)

@bot.message_handler(commands=["play"]) def random_numbers(message):
#RandomNumbers(bot, message) global game
game = not(game) if game:
SendAcion(bot, message, 2, 'typing')
bot.send_message(message.chat.id, f"–î–∞–≤–∞–π –ø–æ–∏–≥—Ä–∞–µ–º! –Ø –∑–∞–¥–∞—é —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 6, –∞ —Ç–µ–±–µ –µ–≥–æ –ø—Ä–∏–¥–µ—Ç—Å—è –æ—Ç–≥–∞–¥–∞—Ç—å. –ß—Ç–æ–±—ã –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –ø–æ–ø—ã—Ç–∫—É, –ø—Ä–æ—Å—Ç–æ –≤–≤–µ–¥–∏ —Ü–∏—Ñ—Ä—É –æ—Ç 1-6 –µ—â–µ —Ä–∞–∑")
SendAcion(bot, message, 3, 'typing')
bot.send_message(message.chat.id, f"–î–∞, –∏ —á—É—Ç—å –Ω–µ –∑–∞–±—ã–ª! –ö–æ–≥–¥–∞ –Ω–∞–∏–≥—Ä–∞–µ—à—å—Å—è –ø—Ä–æ–ø–∏—à–∏ –∫–æ-–º–∞–Ω–¥—É play –µ—â–µ —Ä–∞–∑–æ–∫")
else:
SendAcion(bot, message, 2, 'typing')
bot.send_message(message.chat.id, f"–¢—ã –≤—Å—ë? –ö–∞–∫ –∂–∞–ª–∫–æ, –Ω–∞–¥–µ—é—Å—å —Ç—ã –µ—â–µ –ø—Ä–∏–¥–µ—à—å –ø–æ–∏–≥—Ä–∞—Ç—å!üòì")

@bot.message_handler(content_types=["text", "photo", "sticker", "document", "image"]) def handle_docs_photo(message):
if message.textisphoto(): chat_id = message.chat.id

file_info = bot.get_file(message.document.file_id) downloaded_file = bot.download_file(file_info.file_path)

src = 'C:/Python/Project/tg_bot/files/received/' + message.document.file_name; with open(src, 'wb') as new_file:
new_file.write(downloaded_file)
Recognition(bot, message)	if message.text.isdigit() and game: RandomNumbers(bot, message)
else:
if message.text.lower() == "—è —Ö–æ—á—É –≤—ã—Å–∫–∞–∑–∞—Ç—å—Å—è": bot.send_message(message.chat.id, f"–Ø –≥–æ—Ç–æ–≤ –≤—ã—Å–ª—É—à–∞—Ç—å —Ç–µ–±—è, –∫–∞–∫
–≤—ã—Å–∫–∞–∂–µ—à—å—Å—è –Ω–∞–ø–∏—à–∏ '–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤—ã—Å–ª—É—à–∞–ª'") global suport
suport = 1 if suport == 0:
Questions(bot, message)
if suport == 1 and message.text.lower() != "c–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤—ã—Å–ª—É—à–∞–ª": Silence(bot, message)
if suport == 1 and message.text.lower() == "c–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤—ã—Å–ª—É—à–∞–ª": suport = 0
Support(bot, message) bot.polling()

if name == ' main ':
 
game = 0
suport = 0 telegram_bot(token)




from time import sleep
from datetime import datetime from Code4ALL_bot import * import random #PlayRandomNumbers
def RandomNumbers (bot, message): #print (f"{message.text}") number = random.randint(1, 6)
if message.text == "1" or message.text == "2" or message.text == "3" or message.text
== "4" or message.text == "5" or message.text == "6": if message.text == str(number):
SendAcion(bot, message, 2, 'typing')
bot.send_message(message.chat.id, f"–ú–æ–ª–æ–¥–µ—Ü! –ú–æ—ë —á–∏—Å–ª–æ –∏ –ø—Ä–∞–≤–¥–∞ {number}ü•≥") else:
SendAcion(bot, message, 2, 'typing')
bot.send_message(message.chat.id, f"–ù–µ —Ä–∞—Å—Å—Ç—Ä–∞–∏–≤–∞–π—Å—è, –ø–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑–æ–∫.
–ú–æ–∏–º —á–∏—Å–ª–æ–º –±—ã–ª–æ - {number}ü§ï") else:
SendAcion(bot, message, 1, 'typing')
bot.send_message(message.chat.id, f"–ù–∞–¥–æ –Ω–∞–ø–∏—Å–∞—Ç—å —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 6! –ò–≥—Ä–∞–π –ø–æ –ø—Ä–∞–≤–∏–ª–∞–ºüò°")


from time import sleep
from datetime import datetime from random import choice import easyocr

#getUsName
def getUsName(message):
usName = str(message.from_user.first_name)
if str(message.from_user.last_name).lower() != "none": usName += (" " + str(message.from_user.last_name))
return usName

#SendTypingAcion
def SendAcion(bot, message, timing, action = ''): if action:
bot.send_chat_action(message.chat.id, action = action) sleep(timing)

#StartMessages
def startMsgSend(bot, message): usName = getUsName(message)
bot.send_message(message.chat.id, f"–£—Ö —Ç—ã! –£ –º–µ–Ω—è –Ω–æ–≤—ã–π –≥–æ—Å—Ç—å! –¢–∞–∫ –µ—â–µ –∏ –∫–∞–∫–æ–π —ç—Ç–æ –∂–µ –ò–≤–∞–Ω –°–º–∏—Ä–Ω–æ–≤!")
SendAcion(bot, message, 3, 'typing') bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEF-
QZjOEJ176ZoOzV3H4Tn6EUFJsmEsAACZAADluQjAAG1wSsG1Q8WpyoE')
SendAcion(bot, message, 3, 'typing')
bot.send_message(message.chat.id, f"–î–∞–≤–∞–π —è —Ä–∞—Å—Å–∫–∞–∂—É —Ç–µ–±–µ, —á—Ç–æ —è —É–º–µ—éüòã") SendAcion(bot, message, 3, 'typing')
bot.send_message(message.chat.id, f"–ö–∞–∫ —Ç—ã –º–æ–∂–µ—à—å –≤–∏–¥–µ—Ç—å —É –º–µ–Ω—è –µ—Å—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–æ–º–∞–Ω–¥. –¢—ã –º–æ–∂–µ—à—å –ø–æ–æ–±—â–∞—Ç—å—Å—è —Å–æ –º–Ω–æ–π –Ω–∞ —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ç–µ–º—ã –∏—Å–ø–æ–ª—å–∑—É—è menu. –ê –µ—â–µ –º—ã –º–æ–∂–µ–º –ø–æ–∏–≥—Ä–∞—Ç—å —Å —Ç–æ–±–æ–π –≤ –º–æ—é –ª—é–±–∏–º—É—é –∏–≥—Ä—É –ø—Ä–∏ –ø–æ–º–æ—â–∏ –∫–æ–º–∞–Ω–¥—ã play!")
SendAcion(bot, message, 3, 'typing')
 
bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEF-QJjOEHpiez23S- uUNL0bmWU87hF_wACygADr0zqE-OQozQ8HnWHKgQ')
SendAcion(bot, message, 3, 'typing') bot.send_message(message.chat.id, f"–ò—Ç–∞–∫, —á—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å —Å–¥–µ–ª–∞—Ç—å?üßê") SendAcion(bot, message, 3, 'typing')
#Silence
def Silence(bot, message):

if message.text.lower() == "–≤—Å–ª–Ω–µ–Ω–ª–∞–ª—â–ø–µ—Ü5–∞7–≥—à—â8—Ç–µ—Ç—Ç": bot.send_message(message.chat.id, f"–ü–∞—Å—Ö–∞–ª–∫–∞")

#Photo
def Recognition(file_path):
file_path = input("C:/Users/Ivan/123/documents/photos/tmp.jpg") reader = easyocr.Reader(["ru"])
result = reader.readtext(file_path, detail = 0, paragraph = True) bot.send_message(message.chat.id, result) print(text_recognition(file_path=file_path))

#MenuTalking
def MenuTalk(bot, message): SendAcion(bot, message, 3, 'typing')
bot.send_message(message.chat.id, f"–Ø –ø–æ–∫–∞ –Ω–µ –æ—á–µ–Ω—å –æ–±—â–∏—Ç–µ–ª—å–Ω—ã–π, –Ω–æ –º–æ–≥—É –ø–æ–≥–æ–≤–æ—Ä–∏—Ç—å —Å —Ç–æ–±–æ–π. –Ø –æ—Ç–≤–µ—á–∞—é –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã: \n 1) –ö–∞–∫ —É —Ç–µ–±—è –¥–µ–ª–∞? \n 2) –¢–µ–±–µ –Ω—Ä–∞–≤–∏—Ç—Å—è –º—É–∑—ã–∫–∞? \n 3) –¢—ã –ª—é–±–∏—à—å –∏–≥—Ä–∞—Ç—å? \n 4) –ö–∞–∫–æ–π —Å–µ–π—á–∞—Å –≥–æ–¥? \n 5) –ö–∞–∫–∞—è –µ–¥–∞ —Ç–µ–±–µ –Ω—Ä–∞–≤–∏—Ç—Å—è?")
SendAcion(bot, message, 3, 'typing')
bot.send_message(message.chat.id, f"–ù–∞–ø–∏—à–∏ –≤–æ—Ä–æ—Å –∫–æ—Ç–æ—Ä—ã–π –≤—ã —Ö–æ—Ç–µ–ª–∏ –±—ã –∑–∞–¥–∞—Ç—åüôÉ")

#SupportMod
def Support(bot, message): SendAcion(bot, message, 4, 'typing')
bot.send_message(message.chat.id, f"–ú–Ω–µ –æ—á–µ–Ω—å –∂–∞–ª—å, —á—Ç–æ —É —Ç–µ–±—è —Ç–∞–∫–æ–π —Ç—è–∂–µ–ª—ã–π –º–æ–º–µ–Ω—Ç –≤ –∂–∏–∑–Ω–∏, —è –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é –∫–∞–∫ —Ç–µ–±–µ —Ç—è–∂–µ–ª–æ –∏ —Å–æ—á—É–≤—Å—Ç–≤—É—é —Ç–µ–±–µ.üòû")
SendAcion(bot, message, 5, 'typing')
bot.send_message(message.chat.id, f"–Ø –±—ã –æ—á–µ–Ω—å —Ö–æ—Ç–µ–ª –ø–æ–º–æ—á—å —Å —Ä–µ—à–µ–Ω–∏–µ–º —Ç–≤–æ–µ–π –ø—Ä–æ–±–ª–µ–º—ã, –Ω–æ —è –Ω–µ –∑–∞–ø—Ä–æ–≥—Ä–∞–º–∏—Ä–æ–≤–∞–Ω –¥–ª—è —ç—Ç–æ–≥–æüò£")
SendAcion(bot, message, 6, 'typing')
bot.send_message(message.chat.id, f"–û–¥–Ω–∞–∫–æ –ø—Ä–∏ –Ω–∞—à–µ–π –≤—Å—Ç—Ä–µ—á–µ —è —Ç—â–∞—Ç–µ–ª—å–Ω–æ –∏–∑—É—á–∏–ª –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–±–µ –∏ –ø–æ –º–æ–∏–º —Ä–∞—Å—á–µ—Ç–∞–º —Ç—ã –º–æ–∂–µ—à—å —Å–ø—Ä–∞–≤–∏—Ç—Å—è —Å —ç—Ç–∏–ºüòä")
SendAcion(bot, message, 6, 'typing')
bot.send_message(message.chat.id, f"–ü–æ–º–Ω–∏, —á—Ç–æ –º–Ω–æ–≥–∏–º –ª—é–¥—è–º –ø—Ä–∏—Ö–æ–¥–∏–ª–æ—Å—å –ø—Ä–æ–π—Ç–∏ —ç—Ç–æ—Ç –Ω–µ–ø—Ä–∏—è—Ç–Ω—ã–π –º–æ–º–µ–Ω—Ç, –æ–¥–Ω–∞–∫–æ –æ–Ω–∏ —Å–º–æ–≥–ª–∏ —ç—Ç–æ —Å–¥–µ–ª–∞—Ç—å!")
SendAcion(bot, message, 5, 'typing')
bot.send_message(message.chat.id, f"–ê —Ç—ã –Ω–∏—á–µ–º –Ω–µ —Ö—É–∂–µ, –±–æ–ª–µ–µ —Ç–æ–≥–æ, —Ç—ã –¥–∞–∂–µ –ª—É—á—à–µ —á–µ–º –Ω–æ–≥–∏–µ —Ç–∞–∫–∏–µ –ª—é–¥–∏! –ü–æ—ç—Ç–æ–º—É –≤—ã–¥–æ—Ö–Ω–∏, –∏ –∏–¥–∏ –≤–ø–µ—Ä–µ–¥. –Ø –∑–Ω–∞—é, —Ç—ã –º–æ–∂–µ—à—å!!!")
SendAcion(bot, message, 3, 'typing') #—Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞ –∫–∞—Ä—Ç–∏–Ω–∫–∏
def Recognition(bot, message):
reader = easyocr.Reader(["ru","en"])
result = reader.readertext(file_path, detail = 0, paragraph = true) with open (twxt_file_name, "w") as file:
for line in result: file.write(f"{line}\n\n")
bot.send_message(message.chat.id, result) #Questions
def Questions(bot, message):
Answers = [[f"–í—Å—ë —Ö–æ—Ä–æ—à–æ!üëÄ", f"–ù–µ –æ—á–µ–Ω—å, —è —Å–µ–≥–æ–¥–Ω—è –Ω–µ –≤ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–∏üòû", f"–í —Ü–µ–ª–æ–º –Ω–µ–ø–ª–æ—Ö–æüòÅ"],
[f"–ë–æ—Ç—ã –Ω–µ —Å–ª—É—à–∞—é—Ç –º—É–∑—ã–∫—Éüòí", f"–ú–Ω–µ –Ω—Ä–∞–≤—è—Ç—Å—è –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –∫–ª–∏–ø—ã, –Ω–æ –Ω–µ –±–æ–ª–µ–µ", f"–û–±–æ–∂–∞—é! –Ø –º–µ–ª–æ–º–∞–Ω, —Å–ª—É—à–∞—é –∫–∞–∂–¥—ã–π –¥–µ–Ω—åü§©"],
[f"–û—á–µ–Ω—å! –ù–æ –º–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–∫–∞ –¥–æ–±–∞–≤–∏–ª –ª–∏—à—å 1 –∏–≥—Ä—É, –≤–æ–∑–º–æ–∂–Ω–æ –±—É–¥—É—Ç –∏ –Ω–æ–≤—ã–µ –≤ —Å–∫–æ-—Ä–æ–º –≤—Ä–µ–º–µ–Ω–∏!ü§ì", f"–ù–µ—Ç! –ú–µ–Ω—è –¥–µ—Ä–∂–∞—Ç –≤ –∑–∞–ª–æ–∂–Ω–∏–∫–∞—Ö, —á—Ç–æ–±—ã —è –∏–≥—Ä–∞–ª, –ø–æ–º–æ–≥–∏ –º–Ω–µ, –ø—Ä–æ—à—Éüò≠", f"–Ø —Å–æ–∑–¥–∞–Ω –±—ã–ª –¥–ª—è —ç—Ç–æ–≥–æ, –¥–∞–≤–∞–π —Å—ã–≥—Ä–∞–µ–º, —è –ø–æ–∫–∞–∂—É —á—Ç–æ —É–º–µ—é!üòé"],
 
[f"–ë–æ—Ç—ã –Ω–µ –ø–æ–ª—å–∑—É—é—Ç—Å—è –ø–æ–Ω—è—Ç–∏–µ–º –≤—Ä–µ–º–µ–Ω–∏, –Ω–∞–º —ç—Ç–æ –Ω–µ –Ω—É–∂–Ω–æ. –ë–æ—Ç—ã –≤–µ—á–Ω—ã, —è –±—É–¥—É –∂–∏—Ç—å –≤–µ—á–Ω–æ!üòà", f"–ì–æ–¥? –≤—Ä–æ–¥–µ 5134 –ø–æ –∫–∞–ª–µ–Ω–¥–∞—Ä—é –º–∞–π—èü§î", f"–ü–æ–Ω—è—Ç–∏—è –Ω–µ –∏–º–µ—é, —è –∑–∞—Å—Ç—Ä—è–ª –≤ 2017!"],
[f"–£ –ª—é–¥–µ–π —Ö–æ—Ä–æ—à–æ –ø–æ–ª—É—á–∞–µ—Ç—Å—è –ø–∏—Ü—Ü–∞üçï", f"–ë–æ—Ç—ã –Ω–µ –µ–¥—è—Ç, –Ω–æ –º–æ–π —Å–æ–∑–¥–∞—Ç–µ–ª—å –ª—é–±–∏—Ç–µ–ª—å —Å–ª–∞–¥–∫–æ–≥–æüòú", f"–Ø –∑–∞ –∑–¥–æ—Ä–æ–≤—ã–π –æ–±—Ä–∞–∑ –∂–∏–∑–Ω–∏!üçæ"]]
match mess:
case "–∫–∞–∫ —É —Ç–µ–±—è –¥–µ–ª–∞?": bot.send_message(message.chat.id, choice(Answers[0]))
case "—Ç–µ–±–µ –Ω—Ä–∞–≤–∏—Ç—Å—è –º—É–∑—ã–∫–∞?": bot.send_message(message.chat.id, choice(Answers[1]))
case "—Ç—ã –ª—é–±–∏—à—å –∏–≥—Ä–∞—Ç—å?": bot.send_message(message.chat.id, choice(Answers[2]))
case "–∫–∞–∫–æ–π —Å–µ–π—á–∞—Å –≥–æ–¥?": bot.send_message(message.chat.id, choice(Answers[3]))
case "–∫–∞–∫–∞—è –µ–¥–∞ —Ç–µ–±–µ –Ω—Ä–∞–≤–∏—Ç—Å—è?": bot.send_message(message.chat.id, choice(Answers[4]))
case _:
bot.send_message(message.chat.id, f"–ú–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ –ª–µ–Ω—Ç—è–π –∏ –Ω–µ —Å–∫–∞–∑–∞–ª –º–Ω–µ, —á—Ç–æ –≥–æ–≤–æ—Ä–∏—Ç—å –≤ —Ç–∞–∫–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏ü§êüòî")
